networks:
  proxy:
    external: true
    name: proxy

services:
  fleet-mysql:
    image: mysql
    platform: linux/x86_64
    environment:
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - fleet_mysql:/var/lib/mysql
    cap_add:
      - SYS_NICE
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD --silent || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    expose:
      - "3306"
    restart: unless-stopped

  fleet-redis:
    image: redis:7.2
    environment:
      - TZ=${TZ}
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - fleet_redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 12
    expose:
      - "6379"
    restart: unless-stopped

  fleet:
    image: fleetdm/fleet
    platform: linux/x86_64
    depends_on:
      fleet-mysql:
        condition: service_healthy
      fleet-redis:
        condition: service_healthy
    command: sh -c "/usr/bin/fleet prepare db --no-prompt && /usr/bin/fleet serve"
    environment:
      - TZ=${TZ}
      # In-cluster service addresses (no hostnames/ports on the host)
      - FLEET_MYSQL_ADDRESS=fleet-mysql:3306
      - FLEET_MYSQL_DATABASE=${MYSQL_DATABASE}
      - FLEET_MYSQL_USERNAME=${MYSQL_USER}
      - FLEET_MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - FLEET_REDIS_ADDRESS=fleet-redis:6379

      # Fleet HTTP listener. NPM terminates TLS and talks HTTP to Fleet over the proxy network.
      - FLEET_SERVER_ADDRESS=0.0.0.0:8080
      - FLEET_SERVER_TLS=false
      - FLEET_SERVER_PRIVATE_KEY=

      - FLEET_LOGGING_JSON=${FLEET_LOGGING_JSON}
      - FLEET_OSQUERY_STATUS_LOG_PLUGIN=${FLEET_OSQUERY_STATUS_LOG_PLUGIN}
      - FLEET_FILESYSTEM_STATUS_LOG_FILE=${FLEET_FILESYSTEM_STATUS_LOG_FILE}
      - FLEET_FILESYSTEM_RESULT_LOG_FILE=${FLEET_FILESYSTEM_RESULT_LOG_FILE}
      - FLEET_LICENSE_KEY=${FLEET_LICENSE_KEY}
      - FLEET_OSQUERY_LABEL_UPDATE_INTERVAL=${FLEET_OSQUERY_LABEL_UPDATE_INTERVAL}
      - FLEET_VULNERABILITIES_CURRENT_INSTANCE_CHECKS=${FLEET_VULNERABILITIES_CURRENT_INSTANCE_CHECKS}
      - FLEET_VULNERABILITIES_DATABASES_PATH=${FLEET_VULNERABILITIES_DATABASES_PATH}
      - FLEET_VULNERABILITIES_PERIODICITY=${FLEET_VULNERABILITIES_PERIODICITY}

    # No host ports published; only internal ports are exposed for NPM and peers on the 'proxy' network.
    expose:
      - "8080"   # UI/API
      - "8220"   # osquery enroll/TLS endpoint (NPM TCP stream proxy)

    volumes:
      - fleet_data:/fleet
      - fleet_logs:/logs
      - fleet_vulndb:/vulndb

    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 12

    networks:
      - proxy

    restart: unless-stopped

volumes:
  fleet_mysql:
  fleet_redis:
  fleet_data:
  fleet_logs:
  fleet_vulndb:
